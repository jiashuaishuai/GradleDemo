// Top-level build file where you can add configuration options common to all sub-projects/modules.


apply from: 'projectDemo.gradle'
apply from: 'extensionDemo.gradle'


//buildscript gradle执行时，优先执行该代码块中的内容，然后在执行剩余的build脚本
//所以gradle 中所用到的插件必须先在buildscript中声明，后才能在其他build脚本中使用
buildscript {

    repositories {
        google()
        jcenter()
        //配置本地仓库
        maven {
            url uri('../GradleDemo/repo')
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath 'com.plugindemo:plugindemo:1.0.0'
        classpath 'com.google.code.gson:gson:2.8.5'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
//所有工程，
allprojects {
    repositories {
        google()
        jcenter()
    }
}
task taskY {
    doLast {
        println "taskY"
    }
}
task taskX(dependsOn: 'taskY') {
    doLast {
        println "taskX"
    }
}


4.times {
    task "Mytask$it" {
        doLast {
            println "im task number $it"
        }
    }
}

Mytask1.dependsOn Mytask2, Mytask3


task myTask {
    ext.myProperty = "myValue"
}

task printTaskProperties {
    doLast {
        println myTask.myProperty
    }

}

defaultTasks 'Mytask1'


///buildscript 演示demo
import com.google.gson.*

task printJson() {
    Gson gson = new Gson()
//    println "gson---- "+gson.toString()
}


allprojects.each {
    Project p ->
        //project 配置之前
        if (p.name.equals("app"))
            p.beforeEvaluate {
                println ",--子项目beforeEvaluate回调..."
            }
}
println ",--根项目配置开始---"
task rootTest {
    println ",--根项目里任务配置---"
    doLast {
        println ",--执行根项目任务..."
    }
}

println ",--根项目配置结束---"



