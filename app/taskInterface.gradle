//task接口解析
class SayHelloTask extends DefaultTask {
    String msg = 'default name'
    int age = 20
    @TaskAction
    void sayHell() {
        println "Hello $msg ! Age is ${age}"
    }
}

task test1 {
    doLast {
        println "task test1 exec..."
    }
}
task test2 {
    doLast {
        println "task test2 exec..."
    }
}
task test3 {
    doLast {
        println "task test3 exec..."
    }
}
task hello(type: SayHelloTask,group:'myGroup')

//对task进行配置，
hello.configure {
    println "hello task configure"
    msg = "hjy"
}

//获取task的名称
println "task name is ${hello.getName()}"
//获取task的组名
println "task group is ${hello.getGroup()}"

//设置task里的属性值，设置 age = 70
hello.setProperty("age", 70)
//获取task里的某个属性值
println "task msg is ${hello.property('msg')}"

//设置依赖的task，只有test1 task执行完后才会执行hello task
hello.dependsOn(test1)
//设置终结者任务，执行完hello task之后会执行test2 task，通常可以用该方法做一些清理操作
hello.finalizedBy(test2)

//如果同时执行hello、test3这2个task，会确保test3执行完之后才执行hello这个task，用这个来保证执行顺序
hello.setMustRunAfter([test3])

//设置满足某个条件后才执行该task
hello.setOnlyIf {
    //只有当 age = 70 时，才会执行task，否则不会执行
    return hello.property("age") == 70
}